#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8658494792274923532) {
   out_8658494792274923532[0] = 0;
   out_8658494792274923532[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8658494792274923532[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8658494792274923532[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8658494792274923532[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8658494792274923532[5] = -sin(in_vec[1]);
   out_8658494792274923532[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8658494792274923532[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8658494792274923532[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8658494792274923532[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8658494792274923532[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8658494792274923532[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8658494792274923532[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8658494792274923532[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8658494792274923532[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8658494792274923532[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8658494792274923532[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8658494792274923532[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5030499929160793532) {
   out_5030499929160793532[0] = delta_x[0] + nom_x[0];
   out_5030499929160793532[1] = delta_x[1] + nom_x[1];
   out_5030499929160793532[2] = delta_x[2] + nom_x[2];
   out_5030499929160793532[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5030499929160793532[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5030499929160793532[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5030499929160793532[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5030499929160793532[7] = delta_x[6] + nom_x[7];
   out_5030499929160793532[8] = delta_x[7] + nom_x[8];
   out_5030499929160793532[9] = delta_x[8] + nom_x[9];
   out_5030499929160793532[10] = delta_x[9] + nom_x[10];
   out_5030499929160793532[11] = delta_x[10] + nom_x[11];
   out_5030499929160793532[12] = delta_x[11] + nom_x[12];
   out_5030499929160793532[13] = delta_x[12] + nom_x[13];
   out_5030499929160793532[14] = delta_x[13] + nom_x[14];
   out_5030499929160793532[15] = delta_x[14] + nom_x[15];
   out_5030499929160793532[16] = delta_x[15] + nom_x[16];
   out_5030499929160793532[17] = delta_x[16] + nom_x[17];
   out_5030499929160793532[18] = delta_x[17] + nom_x[18];
   out_5030499929160793532[19] = delta_x[18] + nom_x[19];
   out_5030499929160793532[20] = delta_x[19] + nom_x[20];
   out_5030499929160793532[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4052708836067517963) {
   out_4052708836067517963[0] = -nom_x[0] + true_x[0];
   out_4052708836067517963[1] = -nom_x[1] + true_x[1];
   out_4052708836067517963[2] = -nom_x[2] + true_x[2];
   out_4052708836067517963[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4052708836067517963[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4052708836067517963[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4052708836067517963[6] = -nom_x[7] + true_x[7];
   out_4052708836067517963[7] = -nom_x[8] + true_x[8];
   out_4052708836067517963[8] = -nom_x[9] + true_x[9];
   out_4052708836067517963[9] = -nom_x[10] + true_x[10];
   out_4052708836067517963[10] = -nom_x[11] + true_x[11];
   out_4052708836067517963[11] = -nom_x[12] + true_x[12];
   out_4052708836067517963[12] = -nom_x[13] + true_x[13];
   out_4052708836067517963[13] = -nom_x[14] + true_x[14];
   out_4052708836067517963[14] = -nom_x[15] + true_x[15];
   out_4052708836067517963[15] = -nom_x[16] + true_x[16];
   out_4052708836067517963[16] = -nom_x[17] + true_x[17];
   out_4052708836067517963[17] = -nom_x[18] + true_x[18];
   out_4052708836067517963[18] = -nom_x[19] + true_x[19];
   out_4052708836067517963[19] = -nom_x[20] + true_x[20];
   out_4052708836067517963[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6322168194681504880) {
   out_6322168194681504880[0] = 1.0;
   out_6322168194681504880[1] = 0;
   out_6322168194681504880[2] = 0;
   out_6322168194681504880[3] = 0.0;
   out_6322168194681504880[4] = 0.0;
   out_6322168194681504880[5] = 0.0;
   out_6322168194681504880[6] = 0.0;
   out_6322168194681504880[7] = 0.0;
   out_6322168194681504880[8] = 0.0;
   out_6322168194681504880[9] = 0.0;
   out_6322168194681504880[10] = 0.0;
   out_6322168194681504880[11] = 0.0;
   out_6322168194681504880[12] = 0.0;
   out_6322168194681504880[13] = 0.0;
   out_6322168194681504880[14] = 0.0;
   out_6322168194681504880[15] = 0.0;
   out_6322168194681504880[16] = 0.0;
   out_6322168194681504880[17] = 0.0;
   out_6322168194681504880[18] = 0.0;
   out_6322168194681504880[19] = 0.0;
   out_6322168194681504880[20] = 0.0;
   out_6322168194681504880[21] = 0;
   out_6322168194681504880[22] = 1.0;
   out_6322168194681504880[23] = 0;
   out_6322168194681504880[24] = 0.0;
   out_6322168194681504880[25] = 0.0;
   out_6322168194681504880[26] = 0.0;
   out_6322168194681504880[27] = 0.0;
   out_6322168194681504880[28] = 0.0;
   out_6322168194681504880[29] = 0.0;
   out_6322168194681504880[30] = 0.0;
   out_6322168194681504880[31] = 0.0;
   out_6322168194681504880[32] = 0.0;
   out_6322168194681504880[33] = 0.0;
   out_6322168194681504880[34] = 0.0;
   out_6322168194681504880[35] = 0.0;
   out_6322168194681504880[36] = 0.0;
   out_6322168194681504880[37] = 0.0;
   out_6322168194681504880[38] = 0.0;
   out_6322168194681504880[39] = 0.0;
   out_6322168194681504880[40] = 0.0;
   out_6322168194681504880[41] = 0.0;
   out_6322168194681504880[42] = 0;
   out_6322168194681504880[43] = 0;
   out_6322168194681504880[44] = 1.0;
   out_6322168194681504880[45] = 0.0;
   out_6322168194681504880[46] = 0.0;
   out_6322168194681504880[47] = 0.0;
   out_6322168194681504880[48] = 0.0;
   out_6322168194681504880[49] = 0.0;
   out_6322168194681504880[50] = 0.0;
   out_6322168194681504880[51] = 0.0;
   out_6322168194681504880[52] = 0.0;
   out_6322168194681504880[53] = 0.0;
   out_6322168194681504880[54] = 0.0;
   out_6322168194681504880[55] = 0.0;
   out_6322168194681504880[56] = 0.0;
   out_6322168194681504880[57] = 0.0;
   out_6322168194681504880[58] = 0.0;
   out_6322168194681504880[59] = 0.0;
   out_6322168194681504880[60] = 0.0;
   out_6322168194681504880[61] = 0.0;
   out_6322168194681504880[62] = 0.0;
   out_6322168194681504880[63] = 0.0;
   out_6322168194681504880[64] = 0.0;
   out_6322168194681504880[65] = 0.0;
   out_6322168194681504880[66] = -0.5*state[4];
   out_6322168194681504880[67] = -0.5*state[5];
   out_6322168194681504880[68] = -0.5*state[6];
   out_6322168194681504880[69] = 0.0;
   out_6322168194681504880[70] = 0.0;
   out_6322168194681504880[71] = 0.0;
   out_6322168194681504880[72] = 0.0;
   out_6322168194681504880[73] = 0.0;
   out_6322168194681504880[74] = 0.0;
   out_6322168194681504880[75] = 0.0;
   out_6322168194681504880[76] = 0.0;
   out_6322168194681504880[77] = 0.0;
   out_6322168194681504880[78] = 0.0;
   out_6322168194681504880[79] = 0.0;
   out_6322168194681504880[80] = 0.0;
   out_6322168194681504880[81] = 0.0;
   out_6322168194681504880[82] = 0.0;
   out_6322168194681504880[83] = 0.0;
   out_6322168194681504880[84] = 0.0;
   out_6322168194681504880[85] = 0.0;
   out_6322168194681504880[86] = 0.0;
   out_6322168194681504880[87] = 0.5*state[3];
   out_6322168194681504880[88] = 0.5*state[6];
   out_6322168194681504880[89] = -0.5*state[5];
   out_6322168194681504880[90] = 0.0;
   out_6322168194681504880[91] = 0.0;
   out_6322168194681504880[92] = 0.0;
   out_6322168194681504880[93] = 0.0;
   out_6322168194681504880[94] = 0.0;
   out_6322168194681504880[95] = 0.0;
   out_6322168194681504880[96] = 0.0;
   out_6322168194681504880[97] = 0.0;
   out_6322168194681504880[98] = 0.0;
   out_6322168194681504880[99] = 0.0;
   out_6322168194681504880[100] = 0.0;
   out_6322168194681504880[101] = 0.0;
   out_6322168194681504880[102] = 0.0;
   out_6322168194681504880[103] = 0.0;
   out_6322168194681504880[104] = 0.0;
   out_6322168194681504880[105] = 0.0;
   out_6322168194681504880[106] = 0.0;
   out_6322168194681504880[107] = 0.0;
   out_6322168194681504880[108] = -0.5*state[6];
   out_6322168194681504880[109] = 0.5*state[3];
   out_6322168194681504880[110] = 0.5*state[4];
   out_6322168194681504880[111] = 0.0;
   out_6322168194681504880[112] = 0.0;
   out_6322168194681504880[113] = 0.0;
   out_6322168194681504880[114] = 0.0;
   out_6322168194681504880[115] = 0.0;
   out_6322168194681504880[116] = 0.0;
   out_6322168194681504880[117] = 0.0;
   out_6322168194681504880[118] = 0.0;
   out_6322168194681504880[119] = 0.0;
   out_6322168194681504880[120] = 0.0;
   out_6322168194681504880[121] = 0.0;
   out_6322168194681504880[122] = 0.0;
   out_6322168194681504880[123] = 0.0;
   out_6322168194681504880[124] = 0.0;
   out_6322168194681504880[125] = 0.0;
   out_6322168194681504880[126] = 0.0;
   out_6322168194681504880[127] = 0.0;
   out_6322168194681504880[128] = 0.0;
   out_6322168194681504880[129] = 0.5*state[5];
   out_6322168194681504880[130] = -0.5*state[4];
   out_6322168194681504880[131] = 0.5*state[3];
   out_6322168194681504880[132] = 0.0;
   out_6322168194681504880[133] = 0.0;
   out_6322168194681504880[134] = 0.0;
   out_6322168194681504880[135] = 0.0;
   out_6322168194681504880[136] = 0.0;
   out_6322168194681504880[137] = 0.0;
   out_6322168194681504880[138] = 0.0;
   out_6322168194681504880[139] = 0.0;
   out_6322168194681504880[140] = 0.0;
   out_6322168194681504880[141] = 0.0;
   out_6322168194681504880[142] = 0.0;
   out_6322168194681504880[143] = 0.0;
   out_6322168194681504880[144] = 0.0;
   out_6322168194681504880[145] = 0.0;
   out_6322168194681504880[146] = 0.0;
   out_6322168194681504880[147] = 0.0;
   out_6322168194681504880[148] = 0.0;
   out_6322168194681504880[149] = 0.0;
   out_6322168194681504880[150] = 0.0;
   out_6322168194681504880[151] = 0.0;
   out_6322168194681504880[152] = 0.0;
   out_6322168194681504880[153] = 1.0;
   out_6322168194681504880[154] = 0;
   out_6322168194681504880[155] = 0;
   out_6322168194681504880[156] = 0;
   out_6322168194681504880[157] = 0;
   out_6322168194681504880[158] = 0;
   out_6322168194681504880[159] = 0;
   out_6322168194681504880[160] = 0;
   out_6322168194681504880[161] = 0;
   out_6322168194681504880[162] = 0;
   out_6322168194681504880[163] = 0;
   out_6322168194681504880[164] = 0;
   out_6322168194681504880[165] = 0;
   out_6322168194681504880[166] = 0;
   out_6322168194681504880[167] = 0;
   out_6322168194681504880[168] = 0.0;
   out_6322168194681504880[169] = 0.0;
   out_6322168194681504880[170] = 0.0;
   out_6322168194681504880[171] = 0.0;
   out_6322168194681504880[172] = 0.0;
   out_6322168194681504880[173] = 0.0;
   out_6322168194681504880[174] = 0;
   out_6322168194681504880[175] = 1.0;
   out_6322168194681504880[176] = 0;
   out_6322168194681504880[177] = 0;
   out_6322168194681504880[178] = 0;
   out_6322168194681504880[179] = 0;
   out_6322168194681504880[180] = 0;
   out_6322168194681504880[181] = 0;
   out_6322168194681504880[182] = 0;
   out_6322168194681504880[183] = 0;
   out_6322168194681504880[184] = 0;
   out_6322168194681504880[185] = 0;
   out_6322168194681504880[186] = 0;
   out_6322168194681504880[187] = 0;
   out_6322168194681504880[188] = 0;
   out_6322168194681504880[189] = 0.0;
   out_6322168194681504880[190] = 0.0;
   out_6322168194681504880[191] = 0.0;
   out_6322168194681504880[192] = 0.0;
   out_6322168194681504880[193] = 0.0;
   out_6322168194681504880[194] = 0.0;
   out_6322168194681504880[195] = 0;
   out_6322168194681504880[196] = 0;
   out_6322168194681504880[197] = 1.0;
   out_6322168194681504880[198] = 0;
   out_6322168194681504880[199] = 0;
   out_6322168194681504880[200] = 0;
   out_6322168194681504880[201] = 0;
   out_6322168194681504880[202] = 0;
   out_6322168194681504880[203] = 0;
   out_6322168194681504880[204] = 0;
   out_6322168194681504880[205] = 0;
   out_6322168194681504880[206] = 0;
   out_6322168194681504880[207] = 0;
   out_6322168194681504880[208] = 0;
   out_6322168194681504880[209] = 0;
   out_6322168194681504880[210] = 0.0;
   out_6322168194681504880[211] = 0.0;
   out_6322168194681504880[212] = 0.0;
   out_6322168194681504880[213] = 0.0;
   out_6322168194681504880[214] = 0.0;
   out_6322168194681504880[215] = 0.0;
   out_6322168194681504880[216] = 0;
   out_6322168194681504880[217] = 0;
   out_6322168194681504880[218] = 0;
   out_6322168194681504880[219] = 1.0;
   out_6322168194681504880[220] = 0;
   out_6322168194681504880[221] = 0;
   out_6322168194681504880[222] = 0;
   out_6322168194681504880[223] = 0;
   out_6322168194681504880[224] = 0;
   out_6322168194681504880[225] = 0;
   out_6322168194681504880[226] = 0;
   out_6322168194681504880[227] = 0;
   out_6322168194681504880[228] = 0;
   out_6322168194681504880[229] = 0;
   out_6322168194681504880[230] = 0;
   out_6322168194681504880[231] = 0.0;
   out_6322168194681504880[232] = 0.0;
   out_6322168194681504880[233] = 0.0;
   out_6322168194681504880[234] = 0.0;
   out_6322168194681504880[235] = 0.0;
   out_6322168194681504880[236] = 0.0;
   out_6322168194681504880[237] = 0;
   out_6322168194681504880[238] = 0;
   out_6322168194681504880[239] = 0;
   out_6322168194681504880[240] = 0;
   out_6322168194681504880[241] = 1.0;
   out_6322168194681504880[242] = 0;
   out_6322168194681504880[243] = 0;
   out_6322168194681504880[244] = 0;
   out_6322168194681504880[245] = 0;
   out_6322168194681504880[246] = 0;
   out_6322168194681504880[247] = 0;
   out_6322168194681504880[248] = 0;
   out_6322168194681504880[249] = 0;
   out_6322168194681504880[250] = 0;
   out_6322168194681504880[251] = 0;
   out_6322168194681504880[252] = 0.0;
   out_6322168194681504880[253] = 0.0;
   out_6322168194681504880[254] = 0.0;
   out_6322168194681504880[255] = 0.0;
   out_6322168194681504880[256] = 0.0;
   out_6322168194681504880[257] = 0.0;
   out_6322168194681504880[258] = 0;
   out_6322168194681504880[259] = 0;
   out_6322168194681504880[260] = 0;
   out_6322168194681504880[261] = 0;
   out_6322168194681504880[262] = 0;
   out_6322168194681504880[263] = 1.0;
   out_6322168194681504880[264] = 0;
   out_6322168194681504880[265] = 0;
   out_6322168194681504880[266] = 0;
   out_6322168194681504880[267] = 0;
   out_6322168194681504880[268] = 0;
   out_6322168194681504880[269] = 0;
   out_6322168194681504880[270] = 0;
   out_6322168194681504880[271] = 0;
   out_6322168194681504880[272] = 0;
   out_6322168194681504880[273] = 0.0;
   out_6322168194681504880[274] = 0.0;
   out_6322168194681504880[275] = 0.0;
   out_6322168194681504880[276] = 0.0;
   out_6322168194681504880[277] = 0.0;
   out_6322168194681504880[278] = 0.0;
   out_6322168194681504880[279] = 0;
   out_6322168194681504880[280] = 0;
   out_6322168194681504880[281] = 0;
   out_6322168194681504880[282] = 0;
   out_6322168194681504880[283] = 0;
   out_6322168194681504880[284] = 0;
   out_6322168194681504880[285] = 1.0;
   out_6322168194681504880[286] = 0;
   out_6322168194681504880[287] = 0;
   out_6322168194681504880[288] = 0;
   out_6322168194681504880[289] = 0;
   out_6322168194681504880[290] = 0;
   out_6322168194681504880[291] = 0;
   out_6322168194681504880[292] = 0;
   out_6322168194681504880[293] = 0;
   out_6322168194681504880[294] = 0.0;
   out_6322168194681504880[295] = 0.0;
   out_6322168194681504880[296] = 0.0;
   out_6322168194681504880[297] = 0.0;
   out_6322168194681504880[298] = 0.0;
   out_6322168194681504880[299] = 0.0;
   out_6322168194681504880[300] = 0;
   out_6322168194681504880[301] = 0;
   out_6322168194681504880[302] = 0;
   out_6322168194681504880[303] = 0;
   out_6322168194681504880[304] = 0;
   out_6322168194681504880[305] = 0;
   out_6322168194681504880[306] = 0;
   out_6322168194681504880[307] = 1.0;
   out_6322168194681504880[308] = 0;
   out_6322168194681504880[309] = 0;
   out_6322168194681504880[310] = 0;
   out_6322168194681504880[311] = 0;
   out_6322168194681504880[312] = 0;
   out_6322168194681504880[313] = 0;
   out_6322168194681504880[314] = 0;
   out_6322168194681504880[315] = 0.0;
   out_6322168194681504880[316] = 0.0;
   out_6322168194681504880[317] = 0.0;
   out_6322168194681504880[318] = 0.0;
   out_6322168194681504880[319] = 0.0;
   out_6322168194681504880[320] = 0.0;
   out_6322168194681504880[321] = 0;
   out_6322168194681504880[322] = 0;
   out_6322168194681504880[323] = 0;
   out_6322168194681504880[324] = 0;
   out_6322168194681504880[325] = 0;
   out_6322168194681504880[326] = 0;
   out_6322168194681504880[327] = 0;
   out_6322168194681504880[328] = 0;
   out_6322168194681504880[329] = 1.0;
   out_6322168194681504880[330] = 0;
   out_6322168194681504880[331] = 0;
   out_6322168194681504880[332] = 0;
   out_6322168194681504880[333] = 0;
   out_6322168194681504880[334] = 0;
   out_6322168194681504880[335] = 0;
   out_6322168194681504880[336] = 0.0;
   out_6322168194681504880[337] = 0.0;
   out_6322168194681504880[338] = 0.0;
   out_6322168194681504880[339] = 0.0;
   out_6322168194681504880[340] = 0.0;
   out_6322168194681504880[341] = 0.0;
   out_6322168194681504880[342] = 0;
   out_6322168194681504880[343] = 0;
   out_6322168194681504880[344] = 0;
   out_6322168194681504880[345] = 0;
   out_6322168194681504880[346] = 0;
   out_6322168194681504880[347] = 0;
   out_6322168194681504880[348] = 0;
   out_6322168194681504880[349] = 0;
   out_6322168194681504880[350] = 0;
   out_6322168194681504880[351] = 1.0;
   out_6322168194681504880[352] = 0;
   out_6322168194681504880[353] = 0;
   out_6322168194681504880[354] = 0;
   out_6322168194681504880[355] = 0;
   out_6322168194681504880[356] = 0;
   out_6322168194681504880[357] = 0.0;
   out_6322168194681504880[358] = 0.0;
   out_6322168194681504880[359] = 0.0;
   out_6322168194681504880[360] = 0.0;
   out_6322168194681504880[361] = 0.0;
   out_6322168194681504880[362] = 0.0;
   out_6322168194681504880[363] = 0;
   out_6322168194681504880[364] = 0;
   out_6322168194681504880[365] = 0;
   out_6322168194681504880[366] = 0;
   out_6322168194681504880[367] = 0;
   out_6322168194681504880[368] = 0;
   out_6322168194681504880[369] = 0;
   out_6322168194681504880[370] = 0;
   out_6322168194681504880[371] = 0;
   out_6322168194681504880[372] = 0;
   out_6322168194681504880[373] = 1.0;
   out_6322168194681504880[374] = 0;
   out_6322168194681504880[375] = 0;
   out_6322168194681504880[376] = 0;
   out_6322168194681504880[377] = 0;
   out_6322168194681504880[378] = 0.0;
   out_6322168194681504880[379] = 0.0;
   out_6322168194681504880[380] = 0.0;
   out_6322168194681504880[381] = 0.0;
   out_6322168194681504880[382] = 0.0;
   out_6322168194681504880[383] = 0.0;
   out_6322168194681504880[384] = 0;
   out_6322168194681504880[385] = 0;
   out_6322168194681504880[386] = 0;
   out_6322168194681504880[387] = 0;
   out_6322168194681504880[388] = 0;
   out_6322168194681504880[389] = 0;
   out_6322168194681504880[390] = 0;
   out_6322168194681504880[391] = 0;
   out_6322168194681504880[392] = 0;
   out_6322168194681504880[393] = 0;
   out_6322168194681504880[394] = 0;
   out_6322168194681504880[395] = 1.0;
   out_6322168194681504880[396] = 0;
   out_6322168194681504880[397] = 0;
   out_6322168194681504880[398] = 0;
   out_6322168194681504880[399] = 0.0;
   out_6322168194681504880[400] = 0.0;
   out_6322168194681504880[401] = 0.0;
   out_6322168194681504880[402] = 0.0;
   out_6322168194681504880[403] = 0.0;
   out_6322168194681504880[404] = 0.0;
   out_6322168194681504880[405] = 0;
   out_6322168194681504880[406] = 0;
   out_6322168194681504880[407] = 0;
   out_6322168194681504880[408] = 0;
   out_6322168194681504880[409] = 0;
   out_6322168194681504880[410] = 0;
   out_6322168194681504880[411] = 0;
   out_6322168194681504880[412] = 0;
   out_6322168194681504880[413] = 0;
   out_6322168194681504880[414] = 0;
   out_6322168194681504880[415] = 0;
   out_6322168194681504880[416] = 0;
   out_6322168194681504880[417] = 1.0;
   out_6322168194681504880[418] = 0;
   out_6322168194681504880[419] = 0;
   out_6322168194681504880[420] = 0.0;
   out_6322168194681504880[421] = 0.0;
   out_6322168194681504880[422] = 0.0;
   out_6322168194681504880[423] = 0.0;
   out_6322168194681504880[424] = 0.0;
   out_6322168194681504880[425] = 0.0;
   out_6322168194681504880[426] = 0;
   out_6322168194681504880[427] = 0;
   out_6322168194681504880[428] = 0;
   out_6322168194681504880[429] = 0;
   out_6322168194681504880[430] = 0;
   out_6322168194681504880[431] = 0;
   out_6322168194681504880[432] = 0;
   out_6322168194681504880[433] = 0;
   out_6322168194681504880[434] = 0;
   out_6322168194681504880[435] = 0;
   out_6322168194681504880[436] = 0;
   out_6322168194681504880[437] = 0;
   out_6322168194681504880[438] = 0;
   out_6322168194681504880[439] = 1.0;
   out_6322168194681504880[440] = 0;
   out_6322168194681504880[441] = 0.0;
   out_6322168194681504880[442] = 0.0;
   out_6322168194681504880[443] = 0.0;
   out_6322168194681504880[444] = 0.0;
   out_6322168194681504880[445] = 0.0;
   out_6322168194681504880[446] = 0.0;
   out_6322168194681504880[447] = 0;
   out_6322168194681504880[448] = 0;
   out_6322168194681504880[449] = 0;
   out_6322168194681504880[450] = 0;
   out_6322168194681504880[451] = 0;
   out_6322168194681504880[452] = 0;
   out_6322168194681504880[453] = 0;
   out_6322168194681504880[454] = 0;
   out_6322168194681504880[455] = 0;
   out_6322168194681504880[456] = 0;
   out_6322168194681504880[457] = 0;
   out_6322168194681504880[458] = 0;
   out_6322168194681504880[459] = 0;
   out_6322168194681504880[460] = 0;
   out_6322168194681504880[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3442237330279375227) {
   out_3442237330279375227[0] = dt*state[7] + state[0];
   out_3442237330279375227[1] = dt*state[8] + state[1];
   out_3442237330279375227[2] = dt*state[9] + state[2];
   out_3442237330279375227[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3442237330279375227[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3442237330279375227[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3442237330279375227[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3442237330279375227[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3442237330279375227[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3442237330279375227[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3442237330279375227[10] = state[10];
   out_3442237330279375227[11] = state[11];
   out_3442237330279375227[12] = state[12];
   out_3442237330279375227[13] = state[13];
   out_3442237330279375227[14] = state[14];
   out_3442237330279375227[15] = state[15];
   out_3442237330279375227[16] = state[16];
   out_3442237330279375227[17] = state[17];
   out_3442237330279375227[18] = state[18];
   out_3442237330279375227[19] = state[19];
   out_3442237330279375227[20] = state[20];
   out_3442237330279375227[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3171319833038800398) {
   out_3171319833038800398[0] = 1;
   out_3171319833038800398[1] = 0;
   out_3171319833038800398[2] = 0;
   out_3171319833038800398[3] = 0;
   out_3171319833038800398[4] = 0;
   out_3171319833038800398[5] = 0;
   out_3171319833038800398[6] = dt;
   out_3171319833038800398[7] = 0;
   out_3171319833038800398[8] = 0;
   out_3171319833038800398[9] = 0;
   out_3171319833038800398[10] = 0;
   out_3171319833038800398[11] = 0;
   out_3171319833038800398[12] = 0;
   out_3171319833038800398[13] = 0;
   out_3171319833038800398[14] = 0;
   out_3171319833038800398[15] = 0;
   out_3171319833038800398[16] = 0;
   out_3171319833038800398[17] = 0;
   out_3171319833038800398[18] = 0;
   out_3171319833038800398[19] = 0;
   out_3171319833038800398[20] = 0;
   out_3171319833038800398[21] = 0;
   out_3171319833038800398[22] = 1;
   out_3171319833038800398[23] = 0;
   out_3171319833038800398[24] = 0;
   out_3171319833038800398[25] = 0;
   out_3171319833038800398[26] = 0;
   out_3171319833038800398[27] = 0;
   out_3171319833038800398[28] = dt;
   out_3171319833038800398[29] = 0;
   out_3171319833038800398[30] = 0;
   out_3171319833038800398[31] = 0;
   out_3171319833038800398[32] = 0;
   out_3171319833038800398[33] = 0;
   out_3171319833038800398[34] = 0;
   out_3171319833038800398[35] = 0;
   out_3171319833038800398[36] = 0;
   out_3171319833038800398[37] = 0;
   out_3171319833038800398[38] = 0;
   out_3171319833038800398[39] = 0;
   out_3171319833038800398[40] = 0;
   out_3171319833038800398[41] = 0;
   out_3171319833038800398[42] = 0;
   out_3171319833038800398[43] = 0;
   out_3171319833038800398[44] = 1;
   out_3171319833038800398[45] = 0;
   out_3171319833038800398[46] = 0;
   out_3171319833038800398[47] = 0;
   out_3171319833038800398[48] = 0;
   out_3171319833038800398[49] = 0;
   out_3171319833038800398[50] = dt;
   out_3171319833038800398[51] = 0;
   out_3171319833038800398[52] = 0;
   out_3171319833038800398[53] = 0;
   out_3171319833038800398[54] = 0;
   out_3171319833038800398[55] = 0;
   out_3171319833038800398[56] = 0;
   out_3171319833038800398[57] = 0;
   out_3171319833038800398[58] = 0;
   out_3171319833038800398[59] = 0;
   out_3171319833038800398[60] = 0;
   out_3171319833038800398[61] = 0;
   out_3171319833038800398[62] = 0;
   out_3171319833038800398[63] = 0;
   out_3171319833038800398[64] = 0;
   out_3171319833038800398[65] = 0;
   out_3171319833038800398[66] = 1;
   out_3171319833038800398[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3171319833038800398[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3171319833038800398[69] = 0;
   out_3171319833038800398[70] = 0;
   out_3171319833038800398[71] = 0;
   out_3171319833038800398[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3171319833038800398[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3171319833038800398[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3171319833038800398[75] = 0;
   out_3171319833038800398[76] = 0;
   out_3171319833038800398[77] = 0;
   out_3171319833038800398[78] = 0;
   out_3171319833038800398[79] = 0;
   out_3171319833038800398[80] = 0;
   out_3171319833038800398[81] = 0;
   out_3171319833038800398[82] = 0;
   out_3171319833038800398[83] = 0;
   out_3171319833038800398[84] = 0;
   out_3171319833038800398[85] = 0;
   out_3171319833038800398[86] = 0;
   out_3171319833038800398[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3171319833038800398[88] = 1;
   out_3171319833038800398[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3171319833038800398[90] = 0;
   out_3171319833038800398[91] = 0;
   out_3171319833038800398[92] = 0;
   out_3171319833038800398[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3171319833038800398[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3171319833038800398[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3171319833038800398[96] = 0;
   out_3171319833038800398[97] = 0;
   out_3171319833038800398[98] = 0;
   out_3171319833038800398[99] = 0;
   out_3171319833038800398[100] = 0;
   out_3171319833038800398[101] = 0;
   out_3171319833038800398[102] = 0;
   out_3171319833038800398[103] = 0;
   out_3171319833038800398[104] = 0;
   out_3171319833038800398[105] = 0;
   out_3171319833038800398[106] = 0;
   out_3171319833038800398[107] = 0;
   out_3171319833038800398[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3171319833038800398[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3171319833038800398[110] = 1;
   out_3171319833038800398[111] = 0;
   out_3171319833038800398[112] = 0;
   out_3171319833038800398[113] = 0;
   out_3171319833038800398[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3171319833038800398[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3171319833038800398[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3171319833038800398[117] = 0;
   out_3171319833038800398[118] = 0;
   out_3171319833038800398[119] = 0;
   out_3171319833038800398[120] = 0;
   out_3171319833038800398[121] = 0;
   out_3171319833038800398[122] = 0;
   out_3171319833038800398[123] = 0;
   out_3171319833038800398[124] = 0;
   out_3171319833038800398[125] = 0;
   out_3171319833038800398[126] = 0;
   out_3171319833038800398[127] = 0;
   out_3171319833038800398[128] = 0;
   out_3171319833038800398[129] = 0;
   out_3171319833038800398[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3171319833038800398[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3171319833038800398[132] = 1;
   out_3171319833038800398[133] = 0;
   out_3171319833038800398[134] = 0;
   out_3171319833038800398[135] = 0;
   out_3171319833038800398[136] = 0;
   out_3171319833038800398[137] = 0;
   out_3171319833038800398[138] = 0;
   out_3171319833038800398[139] = 0;
   out_3171319833038800398[140] = 0;
   out_3171319833038800398[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3171319833038800398[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3171319833038800398[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3171319833038800398[144] = 0;
   out_3171319833038800398[145] = 0;
   out_3171319833038800398[146] = 0;
   out_3171319833038800398[147] = 0;
   out_3171319833038800398[148] = 0;
   out_3171319833038800398[149] = 0;
   out_3171319833038800398[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3171319833038800398[151] = 0;
   out_3171319833038800398[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3171319833038800398[153] = 0;
   out_3171319833038800398[154] = 1;
   out_3171319833038800398[155] = 0;
   out_3171319833038800398[156] = 0;
   out_3171319833038800398[157] = 0;
   out_3171319833038800398[158] = 0;
   out_3171319833038800398[159] = 0;
   out_3171319833038800398[160] = 0;
   out_3171319833038800398[161] = 0;
   out_3171319833038800398[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3171319833038800398[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3171319833038800398[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3171319833038800398[165] = 0;
   out_3171319833038800398[166] = 0;
   out_3171319833038800398[167] = 0;
   out_3171319833038800398[168] = 0;
   out_3171319833038800398[169] = 0;
   out_3171319833038800398[170] = 0;
   out_3171319833038800398[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3171319833038800398[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3171319833038800398[173] = 0;
   out_3171319833038800398[174] = 0;
   out_3171319833038800398[175] = 0;
   out_3171319833038800398[176] = 1;
   out_3171319833038800398[177] = 0;
   out_3171319833038800398[178] = 0;
   out_3171319833038800398[179] = 0;
   out_3171319833038800398[180] = 0;
   out_3171319833038800398[181] = 0;
   out_3171319833038800398[182] = 0;
   out_3171319833038800398[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3171319833038800398[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3171319833038800398[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3171319833038800398[186] = 0;
   out_3171319833038800398[187] = 0;
   out_3171319833038800398[188] = 0;
   out_3171319833038800398[189] = 0;
   out_3171319833038800398[190] = 0;
   out_3171319833038800398[191] = 0;
   out_3171319833038800398[192] = 0;
   out_3171319833038800398[193] = 0;
   out_3171319833038800398[194] = 0;
   out_3171319833038800398[195] = 0;
   out_3171319833038800398[196] = 0;
   out_3171319833038800398[197] = 0;
   out_3171319833038800398[198] = 1;
   out_3171319833038800398[199] = 0;
   out_3171319833038800398[200] = 0;
   out_3171319833038800398[201] = 0;
   out_3171319833038800398[202] = 0;
   out_3171319833038800398[203] = 0;
   out_3171319833038800398[204] = 0;
   out_3171319833038800398[205] = 0;
   out_3171319833038800398[206] = 0;
   out_3171319833038800398[207] = 0;
   out_3171319833038800398[208] = 0;
   out_3171319833038800398[209] = 0;
   out_3171319833038800398[210] = 0;
   out_3171319833038800398[211] = 0;
   out_3171319833038800398[212] = 0;
   out_3171319833038800398[213] = 0;
   out_3171319833038800398[214] = 0;
   out_3171319833038800398[215] = 0;
   out_3171319833038800398[216] = 0;
   out_3171319833038800398[217] = 0;
   out_3171319833038800398[218] = 0;
   out_3171319833038800398[219] = 0;
   out_3171319833038800398[220] = 1;
   out_3171319833038800398[221] = 0;
   out_3171319833038800398[222] = 0;
   out_3171319833038800398[223] = 0;
   out_3171319833038800398[224] = 0;
   out_3171319833038800398[225] = 0;
   out_3171319833038800398[226] = 0;
   out_3171319833038800398[227] = 0;
   out_3171319833038800398[228] = 0;
   out_3171319833038800398[229] = 0;
   out_3171319833038800398[230] = 0;
   out_3171319833038800398[231] = 0;
   out_3171319833038800398[232] = 0;
   out_3171319833038800398[233] = 0;
   out_3171319833038800398[234] = 0;
   out_3171319833038800398[235] = 0;
   out_3171319833038800398[236] = 0;
   out_3171319833038800398[237] = 0;
   out_3171319833038800398[238] = 0;
   out_3171319833038800398[239] = 0;
   out_3171319833038800398[240] = 0;
   out_3171319833038800398[241] = 0;
   out_3171319833038800398[242] = 1;
   out_3171319833038800398[243] = 0;
   out_3171319833038800398[244] = 0;
   out_3171319833038800398[245] = 0;
   out_3171319833038800398[246] = 0;
   out_3171319833038800398[247] = 0;
   out_3171319833038800398[248] = 0;
   out_3171319833038800398[249] = 0;
   out_3171319833038800398[250] = 0;
   out_3171319833038800398[251] = 0;
   out_3171319833038800398[252] = 0;
   out_3171319833038800398[253] = 0;
   out_3171319833038800398[254] = 0;
   out_3171319833038800398[255] = 0;
   out_3171319833038800398[256] = 0;
   out_3171319833038800398[257] = 0;
   out_3171319833038800398[258] = 0;
   out_3171319833038800398[259] = 0;
   out_3171319833038800398[260] = 0;
   out_3171319833038800398[261] = 0;
   out_3171319833038800398[262] = 0;
   out_3171319833038800398[263] = 0;
   out_3171319833038800398[264] = 1;
   out_3171319833038800398[265] = 0;
   out_3171319833038800398[266] = 0;
   out_3171319833038800398[267] = 0;
   out_3171319833038800398[268] = 0;
   out_3171319833038800398[269] = 0;
   out_3171319833038800398[270] = 0;
   out_3171319833038800398[271] = 0;
   out_3171319833038800398[272] = 0;
   out_3171319833038800398[273] = 0;
   out_3171319833038800398[274] = 0;
   out_3171319833038800398[275] = 0;
   out_3171319833038800398[276] = 0;
   out_3171319833038800398[277] = 0;
   out_3171319833038800398[278] = 0;
   out_3171319833038800398[279] = 0;
   out_3171319833038800398[280] = 0;
   out_3171319833038800398[281] = 0;
   out_3171319833038800398[282] = 0;
   out_3171319833038800398[283] = 0;
   out_3171319833038800398[284] = 0;
   out_3171319833038800398[285] = 0;
   out_3171319833038800398[286] = 1;
   out_3171319833038800398[287] = 0;
   out_3171319833038800398[288] = 0;
   out_3171319833038800398[289] = 0;
   out_3171319833038800398[290] = 0;
   out_3171319833038800398[291] = 0;
   out_3171319833038800398[292] = 0;
   out_3171319833038800398[293] = 0;
   out_3171319833038800398[294] = 0;
   out_3171319833038800398[295] = 0;
   out_3171319833038800398[296] = 0;
   out_3171319833038800398[297] = 0;
   out_3171319833038800398[298] = 0;
   out_3171319833038800398[299] = 0;
   out_3171319833038800398[300] = 0;
   out_3171319833038800398[301] = 0;
   out_3171319833038800398[302] = 0;
   out_3171319833038800398[303] = 0;
   out_3171319833038800398[304] = 0;
   out_3171319833038800398[305] = 0;
   out_3171319833038800398[306] = 0;
   out_3171319833038800398[307] = 0;
   out_3171319833038800398[308] = 1;
   out_3171319833038800398[309] = 0;
   out_3171319833038800398[310] = 0;
   out_3171319833038800398[311] = 0;
   out_3171319833038800398[312] = 0;
   out_3171319833038800398[313] = 0;
   out_3171319833038800398[314] = 0;
   out_3171319833038800398[315] = 0;
   out_3171319833038800398[316] = 0;
   out_3171319833038800398[317] = 0;
   out_3171319833038800398[318] = 0;
   out_3171319833038800398[319] = 0;
   out_3171319833038800398[320] = 0;
   out_3171319833038800398[321] = 0;
   out_3171319833038800398[322] = 0;
   out_3171319833038800398[323] = 0;
   out_3171319833038800398[324] = 0;
   out_3171319833038800398[325] = 0;
   out_3171319833038800398[326] = 0;
   out_3171319833038800398[327] = 0;
   out_3171319833038800398[328] = 0;
   out_3171319833038800398[329] = 0;
   out_3171319833038800398[330] = 1;
   out_3171319833038800398[331] = 0;
   out_3171319833038800398[332] = 0;
   out_3171319833038800398[333] = 0;
   out_3171319833038800398[334] = 0;
   out_3171319833038800398[335] = 0;
   out_3171319833038800398[336] = 0;
   out_3171319833038800398[337] = 0;
   out_3171319833038800398[338] = 0;
   out_3171319833038800398[339] = 0;
   out_3171319833038800398[340] = 0;
   out_3171319833038800398[341] = 0;
   out_3171319833038800398[342] = 0;
   out_3171319833038800398[343] = 0;
   out_3171319833038800398[344] = 0;
   out_3171319833038800398[345] = 0;
   out_3171319833038800398[346] = 0;
   out_3171319833038800398[347] = 0;
   out_3171319833038800398[348] = 0;
   out_3171319833038800398[349] = 0;
   out_3171319833038800398[350] = 0;
   out_3171319833038800398[351] = 0;
   out_3171319833038800398[352] = 1;
   out_3171319833038800398[353] = 0;
   out_3171319833038800398[354] = 0;
   out_3171319833038800398[355] = 0;
   out_3171319833038800398[356] = 0;
   out_3171319833038800398[357] = 0;
   out_3171319833038800398[358] = 0;
   out_3171319833038800398[359] = 0;
   out_3171319833038800398[360] = 0;
   out_3171319833038800398[361] = 0;
   out_3171319833038800398[362] = 0;
   out_3171319833038800398[363] = 0;
   out_3171319833038800398[364] = 0;
   out_3171319833038800398[365] = 0;
   out_3171319833038800398[366] = 0;
   out_3171319833038800398[367] = 0;
   out_3171319833038800398[368] = 0;
   out_3171319833038800398[369] = 0;
   out_3171319833038800398[370] = 0;
   out_3171319833038800398[371] = 0;
   out_3171319833038800398[372] = 0;
   out_3171319833038800398[373] = 0;
   out_3171319833038800398[374] = 1;
   out_3171319833038800398[375] = 0;
   out_3171319833038800398[376] = 0;
   out_3171319833038800398[377] = 0;
   out_3171319833038800398[378] = 0;
   out_3171319833038800398[379] = 0;
   out_3171319833038800398[380] = 0;
   out_3171319833038800398[381] = 0;
   out_3171319833038800398[382] = 0;
   out_3171319833038800398[383] = 0;
   out_3171319833038800398[384] = 0;
   out_3171319833038800398[385] = 0;
   out_3171319833038800398[386] = 0;
   out_3171319833038800398[387] = 0;
   out_3171319833038800398[388] = 0;
   out_3171319833038800398[389] = 0;
   out_3171319833038800398[390] = 0;
   out_3171319833038800398[391] = 0;
   out_3171319833038800398[392] = 0;
   out_3171319833038800398[393] = 0;
   out_3171319833038800398[394] = 0;
   out_3171319833038800398[395] = 0;
   out_3171319833038800398[396] = 1;
   out_3171319833038800398[397] = 0;
   out_3171319833038800398[398] = 0;
   out_3171319833038800398[399] = 0;
   out_3171319833038800398[400] = 0;
   out_3171319833038800398[401] = 0;
   out_3171319833038800398[402] = 0;
   out_3171319833038800398[403] = 0;
   out_3171319833038800398[404] = 0;
   out_3171319833038800398[405] = 0;
   out_3171319833038800398[406] = 0;
   out_3171319833038800398[407] = 0;
   out_3171319833038800398[408] = 0;
   out_3171319833038800398[409] = 0;
   out_3171319833038800398[410] = 0;
   out_3171319833038800398[411] = 0;
   out_3171319833038800398[412] = 0;
   out_3171319833038800398[413] = 0;
   out_3171319833038800398[414] = 0;
   out_3171319833038800398[415] = 0;
   out_3171319833038800398[416] = 0;
   out_3171319833038800398[417] = 0;
   out_3171319833038800398[418] = 1;
   out_3171319833038800398[419] = 0;
   out_3171319833038800398[420] = 0;
   out_3171319833038800398[421] = 0;
   out_3171319833038800398[422] = 0;
   out_3171319833038800398[423] = 0;
   out_3171319833038800398[424] = 0;
   out_3171319833038800398[425] = 0;
   out_3171319833038800398[426] = 0;
   out_3171319833038800398[427] = 0;
   out_3171319833038800398[428] = 0;
   out_3171319833038800398[429] = 0;
   out_3171319833038800398[430] = 0;
   out_3171319833038800398[431] = 0;
   out_3171319833038800398[432] = 0;
   out_3171319833038800398[433] = 0;
   out_3171319833038800398[434] = 0;
   out_3171319833038800398[435] = 0;
   out_3171319833038800398[436] = 0;
   out_3171319833038800398[437] = 0;
   out_3171319833038800398[438] = 0;
   out_3171319833038800398[439] = 0;
   out_3171319833038800398[440] = 1;
}
void h_4(double *state, double *unused, double *out_5465770794080021784) {
   out_5465770794080021784[0] = state[10] + state[13];
   out_5465770794080021784[1] = state[11] + state[14];
   out_5465770794080021784[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6125132464680508505) {
   out_6125132464680508505[0] = 0;
   out_6125132464680508505[1] = 0;
   out_6125132464680508505[2] = 0;
   out_6125132464680508505[3] = 0;
   out_6125132464680508505[4] = 0;
   out_6125132464680508505[5] = 0;
   out_6125132464680508505[6] = 0;
   out_6125132464680508505[7] = 0;
   out_6125132464680508505[8] = 0;
   out_6125132464680508505[9] = 0;
   out_6125132464680508505[10] = 1;
   out_6125132464680508505[11] = 0;
   out_6125132464680508505[12] = 0;
   out_6125132464680508505[13] = 1;
   out_6125132464680508505[14] = 0;
   out_6125132464680508505[15] = 0;
   out_6125132464680508505[16] = 0;
   out_6125132464680508505[17] = 0;
   out_6125132464680508505[18] = 0;
   out_6125132464680508505[19] = 0;
   out_6125132464680508505[20] = 0;
   out_6125132464680508505[21] = 0;
   out_6125132464680508505[22] = 0;
   out_6125132464680508505[23] = 0;
   out_6125132464680508505[24] = 0;
   out_6125132464680508505[25] = 0;
   out_6125132464680508505[26] = 0;
   out_6125132464680508505[27] = 0;
   out_6125132464680508505[28] = 0;
   out_6125132464680508505[29] = 0;
   out_6125132464680508505[30] = 0;
   out_6125132464680508505[31] = 0;
   out_6125132464680508505[32] = 0;
   out_6125132464680508505[33] = 1;
   out_6125132464680508505[34] = 0;
   out_6125132464680508505[35] = 0;
   out_6125132464680508505[36] = 1;
   out_6125132464680508505[37] = 0;
   out_6125132464680508505[38] = 0;
   out_6125132464680508505[39] = 0;
   out_6125132464680508505[40] = 0;
   out_6125132464680508505[41] = 0;
   out_6125132464680508505[42] = 0;
   out_6125132464680508505[43] = 0;
   out_6125132464680508505[44] = 0;
   out_6125132464680508505[45] = 0;
   out_6125132464680508505[46] = 0;
   out_6125132464680508505[47] = 0;
   out_6125132464680508505[48] = 0;
   out_6125132464680508505[49] = 0;
   out_6125132464680508505[50] = 0;
   out_6125132464680508505[51] = 0;
   out_6125132464680508505[52] = 0;
   out_6125132464680508505[53] = 0;
   out_6125132464680508505[54] = 0;
   out_6125132464680508505[55] = 0;
   out_6125132464680508505[56] = 1;
   out_6125132464680508505[57] = 0;
   out_6125132464680508505[58] = 0;
   out_6125132464680508505[59] = 1;
   out_6125132464680508505[60] = 0;
   out_6125132464680508505[61] = 0;
   out_6125132464680508505[62] = 0;
   out_6125132464680508505[63] = 0;
   out_6125132464680508505[64] = 0;
   out_6125132464680508505[65] = 0;
}
void h_9(double *state, double *unused, double *out_7089745365262767215) {
   out_7089745365262767215[0] = state[10];
   out_7089745365262767215[1] = state[11];
   out_7089745365262767215[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5883942818050917860) {
   out_5883942818050917860[0] = 0;
   out_5883942818050917860[1] = 0;
   out_5883942818050917860[2] = 0;
   out_5883942818050917860[3] = 0;
   out_5883942818050917860[4] = 0;
   out_5883942818050917860[5] = 0;
   out_5883942818050917860[6] = 0;
   out_5883942818050917860[7] = 0;
   out_5883942818050917860[8] = 0;
   out_5883942818050917860[9] = 0;
   out_5883942818050917860[10] = 1;
   out_5883942818050917860[11] = 0;
   out_5883942818050917860[12] = 0;
   out_5883942818050917860[13] = 0;
   out_5883942818050917860[14] = 0;
   out_5883942818050917860[15] = 0;
   out_5883942818050917860[16] = 0;
   out_5883942818050917860[17] = 0;
   out_5883942818050917860[18] = 0;
   out_5883942818050917860[19] = 0;
   out_5883942818050917860[20] = 0;
   out_5883942818050917860[21] = 0;
   out_5883942818050917860[22] = 0;
   out_5883942818050917860[23] = 0;
   out_5883942818050917860[24] = 0;
   out_5883942818050917860[25] = 0;
   out_5883942818050917860[26] = 0;
   out_5883942818050917860[27] = 0;
   out_5883942818050917860[28] = 0;
   out_5883942818050917860[29] = 0;
   out_5883942818050917860[30] = 0;
   out_5883942818050917860[31] = 0;
   out_5883942818050917860[32] = 0;
   out_5883942818050917860[33] = 1;
   out_5883942818050917860[34] = 0;
   out_5883942818050917860[35] = 0;
   out_5883942818050917860[36] = 0;
   out_5883942818050917860[37] = 0;
   out_5883942818050917860[38] = 0;
   out_5883942818050917860[39] = 0;
   out_5883942818050917860[40] = 0;
   out_5883942818050917860[41] = 0;
   out_5883942818050917860[42] = 0;
   out_5883942818050917860[43] = 0;
   out_5883942818050917860[44] = 0;
   out_5883942818050917860[45] = 0;
   out_5883942818050917860[46] = 0;
   out_5883942818050917860[47] = 0;
   out_5883942818050917860[48] = 0;
   out_5883942818050917860[49] = 0;
   out_5883942818050917860[50] = 0;
   out_5883942818050917860[51] = 0;
   out_5883942818050917860[52] = 0;
   out_5883942818050917860[53] = 0;
   out_5883942818050917860[54] = 0;
   out_5883942818050917860[55] = 0;
   out_5883942818050917860[56] = 1;
   out_5883942818050917860[57] = 0;
   out_5883942818050917860[58] = 0;
   out_5883942818050917860[59] = 0;
   out_5883942818050917860[60] = 0;
   out_5883942818050917860[61] = 0;
   out_5883942818050917860[62] = 0;
   out_5883942818050917860[63] = 0;
   out_5883942818050917860[64] = 0;
   out_5883942818050917860[65] = 0;
}
void h_10(double *state, double *unused, double *out_8375116310952542662) {
   out_8375116310952542662[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8375116310952542662[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8375116310952542662[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6839705878356543240) {
   out_6839705878356543240[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6839705878356543240[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6839705878356543240[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6839705878356543240[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6839705878356543240[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6839705878356543240[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6839705878356543240[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6839705878356543240[7] = 0;
   out_6839705878356543240[8] = 0;
   out_6839705878356543240[9] = 0;
   out_6839705878356543240[10] = 0;
   out_6839705878356543240[11] = 0;
   out_6839705878356543240[12] = 0;
   out_6839705878356543240[13] = 0;
   out_6839705878356543240[14] = 0;
   out_6839705878356543240[15] = 0;
   out_6839705878356543240[16] = 1;
   out_6839705878356543240[17] = 0;
   out_6839705878356543240[18] = 0;
   out_6839705878356543240[19] = 1;
   out_6839705878356543240[20] = 0;
   out_6839705878356543240[21] = 0;
   out_6839705878356543240[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6839705878356543240[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6839705878356543240[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6839705878356543240[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6839705878356543240[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6839705878356543240[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6839705878356543240[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6839705878356543240[29] = 0;
   out_6839705878356543240[30] = 0;
   out_6839705878356543240[31] = 0;
   out_6839705878356543240[32] = 0;
   out_6839705878356543240[33] = 0;
   out_6839705878356543240[34] = 0;
   out_6839705878356543240[35] = 0;
   out_6839705878356543240[36] = 0;
   out_6839705878356543240[37] = 0;
   out_6839705878356543240[38] = 0;
   out_6839705878356543240[39] = 1;
   out_6839705878356543240[40] = 0;
   out_6839705878356543240[41] = 0;
   out_6839705878356543240[42] = 1;
   out_6839705878356543240[43] = 0;
   out_6839705878356543240[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6839705878356543240[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6839705878356543240[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6839705878356543240[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6839705878356543240[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6839705878356543240[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6839705878356543240[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6839705878356543240[51] = 0;
   out_6839705878356543240[52] = 0;
   out_6839705878356543240[53] = 0;
   out_6839705878356543240[54] = 0;
   out_6839705878356543240[55] = 0;
   out_6839705878356543240[56] = 0;
   out_6839705878356543240[57] = 0;
   out_6839705878356543240[58] = 0;
   out_6839705878356543240[59] = 0;
   out_6839705878356543240[60] = 0;
   out_6839705878356543240[61] = 0;
   out_6839705878356543240[62] = 1;
   out_6839705878356543240[63] = 0;
   out_6839705878356543240[64] = 0;
   out_6839705878356543240[65] = 1;
}
void h_12(double *state, double *unused, double *out_5634293049988341889) {
   out_5634293049988341889[0] = state[0];
   out_5634293049988341889[1] = state[1];
   out_5634293049988341889[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5504033439632914838) {
   out_5504033439632914838[0] = 1;
   out_5504033439632914838[1] = 0;
   out_5504033439632914838[2] = 0;
   out_5504033439632914838[3] = 0;
   out_5504033439632914838[4] = 0;
   out_5504033439632914838[5] = 0;
   out_5504033439632914838[6] = 0;
   out_5504033439632914838[7] = 0;
   out_5504033439632914838[8] = 0;
   out_5504033439632914838[9] = 0;
   out_5504033439632914838[10] = 0;
   out_5504033439632914838[11] = 0;
   out_5504033439632914838[12] = 0;
   out_5504033439632914838[13] = 0;
   out_5504033439632914838[14] = 0;
   out_5504033439632914838[15] = 0;
   out_5504033439632914838[16] = 0;
   out_5504033439632914838[17] = 0;
   out_5504033439632914838[18] = 0;
   out_5504033439632914838[19] = 0;
   out_5504033439632914838[20] = 0;
   out_5504033439632914838[21] = 0;
   out_5504033439632914838[22] = 0;
   out_5504033439632914838[23] = 1;
   out_5504033439632914838[24] = 0;
   out_5504033439632914838[25] = 0;
   out_5504033439632914838[26] = 0;
   out_5504033439632914838[27] = 0;
   out_5504033439632914838[28] = 0;
   out_5504033439632914838[29] = 0;
   out_5504033439632914838[30] = 0;
   out_5504033439632914838[31] = 0;
   out_5504033439632914838[32] = 0;
   out_5504033439632914838[33] = 0;
   out_5504033439632914838[34] = 0;
   out_5504033439632914838[35] = 0;
   out_5504033439632914838[36] = 0;
   out_5504033439632914838[37] = 0;
   out_5504033439632914838[38] = 0;
   out_5504033439632914838[39] = 0;
   out_5504033439632914838[40] = 0;
   out_5504033439632914838[41] = 0;
   out_5504033439632914838[42] = 0;
   out_5504033439632914838[43] = 0;
   out_5504033439632914838[44] = 0;
   out_5504033439632914838[45] = 0;
   out_5504033439632914838[46] = 1;
   out_5504033439632914838[47] = 0;
   out_5504033439632914838[48] = 0;
   out_5504033439632914838[49] = 0;
   out_5504033439632914838[50] = 0;
   out_5504033439632914838[51] = 0;
   out_5504033439632914838[52] = 0;
   out_5504033439632914838[53] = 0;
   out_5504033439632914838[54] = 0;
   out_5504033439632914838[55] = 0;
   out_5504033439632914838[56] = 0;
   out_5504033439632914838[57] = 0;
   out_5504033439632914838[58] = 0;
   out_5504033439632914838[59] = 0;
   out_5504033439632914838[60] = 0;
   out_5504033439632914838[61] = 0;
   out_5504033439632914838[62] = 0;
   out_5504033439632914838[63] = 0;
   out_5504033439632914838[64] = 0;
   out_5504033439632914838[65] = 0;
}
void h_35(double *state, double *unused, double *out_7897287573482006209) {
   out_7897287573482006209[0] = state[7];
   out_7897287573482006209[1] = state[8];
   out_7897287573482006209[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2758470407307901129) {
   out_2758470407307901129[0] = 0;
   out_2758470407307901129[1] = 0;
   out_2758470407307901129[2] = 0;
   out_2758470407307901129[3] = 0;
   out_2758470407307901129[4] = 0;
   out_2758470407307901129[5] = 0;
   out_2758470407307901129[6] = 0;
   out_2758470407307901129[7] = 1;
   out_2758470407307901129[8] = 0;
   out_2758470407307901129[9] = 0;
   out_2758470407307901129[10] = 0;
   out_2758470407307901129[11] = 0;
   out_2758470407307901129[12] = 0;
   out_2758470407307901129[13] = 0;
   out_2758470407307901129[14] = 0;
   out_2758470407307901129[15] = 0;
   out_2758470407307901129[16] = 0;
   out_2758470407307901129[17] = 0;
   out_2758470407307901129[18] = 0;
   out_2758470407307901129[19] = 0;
   out_2758470407307901129[20] = 0;
   out_2758470407307901129[21] = 0;
   out_2758470407307901129[22] = 0;
   out_2758470407307901129[23] = 0;
   out_2758470407307901129[24] = 0;
   out_2758470407307901129[25] = 0;
   out_2758470407307901129[26] = 0;
   out_2758470407307901129[27] = 0;
   out_2758470407307901129[28] = 0;
   out_2758470407307901129[29] = 0;
   out_2758470407307901129[30] = 1;
   out_2758470407307901129[31] = 0;
   out_2758470407307901129[32] = 0;
   out_2758470407307901129[33] = 0;
   out_2758470407307901129[34] = 0;
   out_2758470407307901129[35] = 0;
   out_2758470407307901129[36] = 0;
   out_2758470407307901129[37] = 0;
   out_2758470407307901129[38] = 0;
   out_2758470407307901129[39] = 0;
   out_2758470407307901129[40] = 0;
   out_2758470407307901129[41] = 0;
   out_2758470407307901129[42] = 0;
   out_2758470407307901129[43] = 0;
   out_2758470407307901129[44] = 0;
   out_2758470407307901129[45] = 0;
   out_2758470407307901129[46] = 0;
   out_2758470407307901129[47] = 0;
   out_2758470407307901129[48] = 0;
   out_2758470407307901129[49] = 0;
   out_2758470407307901129[50] = 0;
   out_2758470407307901129[51] = 0;
   out_2758470407307901129[52] = 0;
   out_2758470407307901129[53] = 1;
   out_2758470407307901129[54] = 0;
   out_2758470407307901129[55] = 0;
   out_2758470407307901129[56] = 0;
   out_2758470407307901129[57] = 0;
   out_2758470407307901129[58] = 0;
   out_2758470407307901129[59] = 0;
   out_2758470407307901129[60] = 0;
   out_2758470407307901129[61] = 0;
   out_2758470407307901129[62] = 0;
   out_2758470407307901129[63] = 0;
   out_2758470407307901129[64] = 0;
   out_2758470407307901129[65] = 0;
}
void h_32(double *state, double *unused, double *out_4225622587469561841) {
   out_4225622587469561841[0] = state[3];
   out_4225622587469561841[1] = state[4];
   out_4225622587469561841[2] = state[5];
   out_4225622587469561841[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8773409162707534131) {
   out_8773409162707534131[0] = 0;
   out_8773409162707534131[1] = 0;
   out_8773409162707534131[2] = 0;
   out_8773409162707534131[3] = 1;
   out_8773409162707534131[4] = 0;
   out_8773409162707534131[5] = 0;
   out_8773409162707534131[6] = 0;
   out_8773409162707534131[7] = 0;
   out_8773409162707534131[8] = 0;
   out_8773409162707534131[9] = 0;
   out_8773409162707534131[10] = 0;
   out_8773409162707534131[11] = 0;
   out_8773409162707534131[12] = 0;
   out_8773409162707534131[13] = 0;
   out_8773409162707534131[14] = 0;
   out_8773409162707534131[15] = 0;
   out_8773409162707534131[16] = 0;
   out_8773409162707534131[17] = 0;
   out_8773409162707534131[18] = 0;
   out_8773409162707534131[19] = 0;
   out_8773409162707534131[20] = 0;
   out_8773409162707534131[21] = 0;
   out_8773409162707534131[22] = 0;
   out_8773409162707534131[23] = 0;
   out_8773409162707534131[24] = 0;
   out_8773409162707534131[25] = 0;
   out_8773409162707534131[26] = 1;
   out_8773409162707534131[27] = 0;
   out_8773409162707534131[28] = 0;
   out_8773409162707534131[29] = 0;
   out_8773409162707534131[30] = 0;
   out_8773409162707534131[31] = 0;
   out_8773409162707534131[32] = 0;
   out_8773409162707534131[33] = 0;
   out_8773409162707534131[34] = 0;
   out_8773409162707534131[35] = 0;
   out_8773409162707534131[36] = 0;
   out_8773409162707534131[37] = 0;
   out_8773409162707534131[38] = 0;
   out_8773409162707534131[39] = 0;
   out_8773409162707534131[40] = 0;
   out_8773409162707534131[41] = 0;
   out_8773409162707534131[42] = 0;
   out_8773409162707534131[43] = 0;
   out_8773409162707534131[44] = 0;
   out_8773409162707534131[45] = 0;
   out_8773409162707534131[46] = 0;
   out_8773409162707534131[47] = 0;
   out_8773409162707534131[48] = 0;
   out_8773409162707534131[49] = 1;
   out_8773409162707534131[50] = 0;
   out_8773409162707534131[51] = 0;
   out_8773409162707534131[52] = 0;
   out_8773409162707534131[53] = 0;
   out_8773409162707534131[54] = 0;
   out_8773409162707534131[55] = 0;
   out_8773409162707534131[56] = 0;
   out_8773409162707534131[57] = 0;
   out_8773409162707534131[58] = 0;
   out_8773409162707534131[59] = 0;
   out_8773409162707534131[60] = 0;
   out_8773409162707534131[61] = 0;
   out_8773409162707534131[62] = 0;
   out_8773409162707534131[63] = 0;
   out_8773409162707534131[64] = 0;
   out_8773409162707534131[65] = 0;
   out_8773409162707534131[66] = 0;
   out_8773409162707534131[67] = 0;
   out_8773409162707534131[68] = 0;
   out_8773409162707534131[69] = 0;
   out_8773409162707534131[70] = 0;
   out_8773409162707534131[71] = 0;
   out_8773409162707534131[72] = 1;
   out_8773409162707534131[73] = 0;
   out_8773409162707534131[74] = 0;
   out_8773409162707534131[75] = 0;
   out_8773409162707534131[76] = 0;
   out_8773409162707534131[77] = 0;
   out_8773409162707534131[78] = 0;
   out_8773409162707534131[79] = 0;
   out_8773409162707534131[80] = 0;
   out_8773409162707534131[81] = 0;
   out_8773409162707534131[82] = 0;
   out_8773409162707534131[83] = 0;
   out_8773409162707534131[84] = 0;
   out_8773409162707534131[85] = 0;
   out_8773409162707534131[86] = 0;
   out_8773409162707534131[87] = 0;
}
void h_13(double *state, double *unused, double *out_8934386510755568170) {
   out_8934386510755568170[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8934386510755568170[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8934386510755568170[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4616232273031006377) {
   out_4616232273031006377[0] = 0;
   out_4616232273031006377[1] = 0;
   out_4616232273031006377[2] = 0;
   out_4616232273031006377[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4616232273031006377[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4616232273031006377[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4616232273031006377[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4616232273031006377[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4616232273031006377[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4616232273031006377[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4616232273031006377[10] = 0;
   out_4616232273031006377[11] = 0;
   out_4616232273031006377[12] = 0;
   out_4616232273031006377[13] = 0;
   out_4616232273031006377[14] = 0;
   out_4616232273031006377[15] = 0;
   out_4616232273031006377[16] = 0;
   out_4616232273031006377[17] = 0;
   out_4616232273031006377[18] = 0;
   out_4616232273031006377[19] = 0;
   out_4616232273031006377[20] = 0;
   out_4616232273031006377[21] = 0;
   out_4616232273031006377[22] = 0;
   out_4616232273031006377[23] = 0;
   out_4616232273031006377[24] = 0;
   out_4616232273031006377[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4616232273031006377[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4616232273031006377[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4616232273031006377[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4616232273031006377[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4616232273031006377[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4616232273031006377[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4616232273031006377[32] = 0;
   out_4616232273031006377[33] = 0;
   out_4616232273031006377[34] = 0;
   out_4616232273031006377[35] = 0;
   out_4616232273031006377[36] = 0;
   out_4616232273031006377[37] = 0;
   out_4616232273031006377[38] = 0;
   out_4616232273031006377[39] = 0;
   out_4616232273031006377[40] = 0;
   out_4616232273031006377[41] = 0;
   out_4616232273031006377[42] = 0;
   out_4616232273031006377[43] = 0;
   out_4616232273031006377[44] = 0;
   out_4616232273031006377[45] = 0;
   out_4616232273031006377[46] = 0;
   out_4616232273031006377[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4616232273031006377[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4616232273031006377[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4616232273031006377[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4616232273031006377[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4616232273031006377[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4616232273031006377[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4616232273031006377[54] = 0;
   out_4616232273031006377[55] = 0;
   out_4616232273031006377[56] = 0;
   out_4616232273031006377[57] = 0;
   out_4616232273031006377[58] = 0;
   out_4616232273031006377[59] = 0;
   out_4616232273031006377[60] = 0;
   out_4616232273031006377[61] = 0;
   out_4616232273031006377[62] = 0;
   out_4616232273031006377[63] = 0;
   out_4616232273031006377[64] = 0;
   out_4616232273031006377[65] = 0;
}
void h_14(double *state, double *unused, double *out_7089745365262767215) {
   out_7089745365262767215[0] = state[10];
   out_7089745365262767215[1] = state[11];
   out_7089745365262767215[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5883942818050917860) {
   out_5883942818050917860[0] = 0;
   out_5883942818050917860[1] = 0;
   out_5883942818050917860[2] = 0;
   out_5883942818050917860[3] = 0;
   out_5883942818050917860[4] = 0;
   out_5883942818050917860[5] = 0;
   out_5883942818050917860[6] = 0;
   out_5883942818050917860[7] = 0;
   out_5883942818050917860[8] = 0;
   out_5883942818050917860[9] = 0;
   out_5883942818050917860[10] = 1;
   out_5883942818050917860[11] = 0;
   out_5883942818050917860[12] = 0;
   out_5883942818050917860[13] = 0;
   out_5883942818050917860[14] = 0;
   out_5883942818050917860[15] = 0;
   out_5883942818050917860[16] = 0;
   out_5883942818050917860[17] = 0;
   out_5883942818050917860[18] = 0;
   out_5883942818050917860[19] = 0;
   out_5883942818050917860[20] = 0;
   out_5883942818050917860[21] = 0;
   out_5883942818050917860[22] = 0;
   out_5883942818050917860[23] = 0;
   out_5883942818050917860[24] = 0;
   out_5883942818050917860[25] = 0;
   out_5883942818050917860[26] = 0;
   out_5883942818050917860[27] = 0;
   out_5883942818050917860[28] = 0;
   out_5883942818050917860[29] = 0;
   out_5883942818050917860[30] = 0;
   out_5883942818050917860[31] = 0;
   out_5883942818050917860[32] = 0;
   out_5883942818050917860[33] = 1;
   out_5883942818050917860[34] = 0;
   out_5883942818050917860[35] = 0;
   out_5883942818050917860[36] = 0;
   out_5883942818050917860[37] = 0;
   out_5883942818050917860[38] = 0;
   out_5883942818050917860[39] = 0;
   out_5883942818050917860[40] = 0;
   out_5883942818050917860[41] = 0;
   out_5883942818050917860[42] = 0;
   out_5883942818050917860[43] = 0;
   out_5883942818050917860[44] = 0;
   out_5883942818050917860[45] = 0;
   out_5883942818050917860[46] = 0;
   out_5883942818050917860[47] = 0;
   out_5883942818050917860[48] = 0;
   out_5883942818050917860[49] = 0;
   out_5883942818050917860[50] = 0;
   out_5883942818050917860[51] = 0;
   out_5883942818050917860[52] = 0;
   out_5883942818050917860[53] = 0;
   out_5883942818050917860[54] = 0;
   out_5883942818050917860[55] = 0;
   out_5883942818050917860[56] = 1;
   out_5883942818050917860[57] = 0;
   out_5883942818050917860[58] = 0;
   out_5883942818050917860[59] = 0;
   out_5883942818050917860[60] = 0;
   out_5883942818050917860[61] = 0;
   out_5883942818050917860[62] = 0;
   out_5883942818050917860[63] = 0;
   out_5883942818050917860[64] = 0;
   out_5883942818050917860[65] = 0;
}
void h_33(double *state, double *unused, double *out_4320971372356475799) {
   out_4320971372356475799[0] = state[16];
   out_4320971372356475799[1] = state[17];
   out_4320971372356475799[2] = state[18];
}
void H_33(double *state, double *unused, double *out_392086597330956475) {
   out_392086597330956475[0] = 0;
   out_392086597330956475[1] = 0;
   out_392086597330956475[2] = 0;
   out_392086597330956475[3] = 0;
   out_392086597330956475[4] = 0;
   out_392086597330956475[5] = 0;
   out_392086597330956475[6] = 0;
   out_392086597330956475[7] = 0;
   out_392086597330956475[8] = 0;
   out_392086597330956475[9] = 0;
   out_392086597330956475[10] = 0;
   out_392086597330956475[11] = 0;
   out_392086597330956475[12] = 0;
   out_392086597330956475[13] = 0;
   out_392086597330956475[14] = 0;
   out_392086597330956475[15] = 0;
   out_392086597330956475[16] = 1;
   out_392086597330956475[17] = 0;
   out_392086597330956475[18] = 0;
   out_392086597330956475[19] = 0;
   out_392086597330956475[20] = 0;
   out_392086597330956475[21] = 0;
   out_392086597330956475[22] = 0;
   out_392086597330956475[23] = 0;
   out_392086597330956475[24] = 0;
   out_392086597330956475[25] = 0;
   out_392086597330956475[26] = 0;
   out_392086597330956475[27] = 0;
   out_392086597330956475[28] = 0;
   out_392086597330956475[29] = 0;
   out_392086597330956475[30] = 0;
   out_392086597330956475[31] = 0;
   out_392086597330956475[32] = 0;
   out_392086597330956475[33] = 0;
   out_392086597330956475[34] = 0;
   out_392086597330956475[35] = 0;
   out_392086597330956475[36] = 0;
   out_392086597330956475[37] = 0;
   out_392086597330956475[38] = 0;
   out_392086597330956475[39] = 1;
   out_392086597330956475[40] = 0;
   out_392086597330956475[41] = 0;
   out_392086597330956475[42] = 0;
   out_392086597330956475[43] = 0;
   out_392086597330956475[44] = 0;
   out_392086597330956475[45] = 0;
   out_392086597330956475[46] = 0;
   out_392086597330956475[47] = 0;
   out_392086597330956475[48] = 0;
   out_392086597330956475[49] = 0;
   out_392086597330956475[50] = 0;
   out_392086597330956475[51] = 0;
   out_392086597330956475[52] = 0;
   out_392086597330956475[53] = 0;
   out_392086597330956475[54] = 0;
   out_392086597330956475[55] = 0;
   out_392086597330956475[56] = 0;
   out_392086597330956475[57] = 0;
   out_392086597330956475[58] = 0;
   out_392086597330956475[59] = 0;
   out_392086597330956475[60] = 0;
   out_392086597330956475[61] = 0;
   out_392086597330956475[62] = 1;
   out_392086597330956475[63] = 0;
   out_392086597330956475[64] = 0;
   out_392086597330956475[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8658494792274923532) {
  H(in_vec, out_8658494792274923532);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5030499929160793532) {
  err_fun(nom_x, delta_x, out_5030499929160793532);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4052708836067517963) {
  inv_err_fun(nom_x, true_x, out_4052708836067517963);
}
void live_H_mod_fun(double *state, double *out_6322168194681504880) {
  H_mod_fun(state, out_6322168194681504880);
}
void live_f_fun(double *state, double dt, double *out_3442237330279375227) {
  f_fun(state,  dt, out_3442237330279375227);
}
void live_F_fun(double *state, double dt, double *out_3171319833038800398) {
  F_fun(state,  dt, out_3171319833038800398);
}
void live_h_4(double *state, double *unused, double *out_5465770794080021784) {
  h_4(state, unused, out_5465770794080021784);
}
void live_H_4(double *state, double *unused, double *out_6125132464680508505) {
  H_4(state, unused, out_6125132464680508505);
}
void live_h_9(double *state, double *unused, double *out_7089745365262767215) {
  h_9(state, unused, out_7089745365262767215);
}
void live_H_9(double *state, double *unused, double *out_5883942818050917860) {
  H_9(state, unused, out_5883942818050917860);
}
void live_h_10(double *state, double *unused, double *out_8375116310952542662) {
  h_10(state, unused, out_8375116310952542662);
}
void live_H_10(double *state, double *unused, double *out_6839705878356543240) {
  H_10(state, unused, out_6839705878356543240);
}
void live_h_12(double *state, double *unused, double *out_5634293049988341889) {
  h_12(state, unused, out_5634293049988341889);
}
void live_H_12(double *state, double *unused, double *out_5504033439632914838) {
  H_12(state, unused, out_5504033439632914838);
}
void live_h_35(double *state, double *unused, double *out_7897287573482006209) {
  h_35(state, unused, out_7897287573482006209);
}
void live_H_35(double *state, double *unused, double *out_2758470407307901129) {
  H_35(state, unused, out_2758470407307901129);
}
void live_h_32(double *state, double *unused, double *out_4225622587469561841) {
  h_32(state, unused, out_4225622587469561841);
}
void live_H_32(double *state, double *unused, double *out_8773409162707534131) {
  H_32(state, unused, out_8773409162707534131);
}
void live_h_13(double *state, double *unused, double *out_8934386510755568170) {
  h_13(state, unused, out_8934386510755568170);
}
void live_H_13(double *state, double *unused, double *out_4616232273031006377) {
  H_13(state, unused, out_4616232273031006377);
}
void live_h_14(double *state, double *unused, double *out_7089745365262767215) {
  h_14(state, unused, out_7089745365262767215);
}
void live_H_14(double *state, double *unused, double *out_5883942818050917860) {
  H_14(state, unused, out_5883942818050917860);
}
void live_h_33(double *state, double *unused, double *out_4320971372356475799) {
  h_33(state, unused, out_4320971372356475799);
}
void live_H_33(double *state, double *unused, double *out_392086597330956475) {
  H_33(state, unused, out_392086597330956475);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
